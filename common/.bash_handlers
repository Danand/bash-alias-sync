#!/bin/bash

# Trims misspelled command from history:

function non-existent-command-trap() {
  if [ "$?" == "127" ]; then
    echo "Let's pretend we did not see that..."

    # shellcheck disable=SC2207
    cells=($(builtin history | tail -n 1))

    local history_last_line_number="${cells[0]}"

    builtin history -d "${history_last_line_number}"
    builtin history -r
  fi
}

trap non-existent-command-trap ERR

# Set up history synchronization between sessions:

HISTSIZE=9000
HISTFILESIZE=$HISTSIZE
HISTCONTROL=ignorespace:ignoredups

function __bash_history_sync() {
  builtin history -a
  HISTFILESIZE=$HISTSIZE
  builtin history -c
  builtin history -r
}

function history() {
  __bash_history_sync
  builtin history "$@"
}

# Set up prompt:

function __change_tab_name() {
  echo -ne "\033]0;$(basename "$(pwd)")\007"
}

if ! declare -F "__git_ps1" > /dev/null; then
  function __git_ps1() {
    if ! git rev-parse --git-dir > /dev/null 2>&1; then
      return 0
    fi

    local revision_current=""

    local branch_current
    branch_current="$(git branch --show-current)"

    if [ -z "${branch_current}" ]; then
      revision_current="$(git rev-parse --short HEAD)"
    else
      revision_current="${branch_current}"
    fi

    echo " (${revision_current})"
  }

  export -f __git_ps1
fi

function __change_prompt() {
  PS1=""

  # HACK: Handle Python Virtual Environment:
  if [ -n "${VIRTUAL_ENV}" ]; then
    PS1+="\n($(basename ${VIRTUAL_ENV}))"
  fi

  PS1+="\n${COLOR_BOLD}${COLOR_GREEN}$(whoami)${COLOR_CLEAR}"
  PS1+="@${COLOR_BLUE}$(uname -n)${COLOR_CLEAR}"
  PS1+=":$(pwd)${COLOR_CYAN}$(__git_ps1)${COLOR_CLEAR}"
  PS1+="\n\$ "

  export PS1
}

function __prompt_command() {
  __bash_history_sync
  __change_tab_name
  __change_prompt
}

PROMPT_COMMAND=__prompt_command

# Set up custom completions:

function __complete_ssh() {
  if [ -f "${HOME}/.ssh/config" ]; then
    complete \
      -W "$( \
        grep \
          "^Host" \
          "${HOME}/.ssh/config" \
        | awk '{print $2}' \
      )" \
      "$1"
  fi
}

__complete_ssh ssh
__complete_ssh ssh-copy-id
__complete_ssh scp
__complete_ssh git-patch-scp
